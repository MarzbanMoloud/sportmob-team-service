version: '3'
services:
    #PHP Service
    php:
        container_name: team_service_php
        build:
            context: Docker/config/php
        volumes:
            - ./api:/usr/share/nginx
        networks:
            team-service-network:

    #Nginx Service
    nginx:
        container_name: team_service_nginx
        image: nginx:latest
        ports:
            - 8091:80
        volumes:
            - ./api:/usr/share/nginx
            - ./Docker/config/nginx/default.conf:/etc/nginx/conf.d/default.conf

        networks:
            team-service-network:

        depends_on:
            - php

    #Redis Service
    redis:
        container_name: team_service_redis
        image: redis:latest
        networks:
            team-service-network:

    #DynamoDb locally Service
    dynamodb:
        container_name: team_service_dynamo
        image: amazon/dynamodb-local:latest
        ports:
            - 8883:8000
        command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]
        networks:
            team-service-network:

    #prometheus Service
    prometheus:
        container_name: es_service_prometheus
        image: prom/prometheus:latest
        volumes:
            - ./Docker/config/prometheus:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        restart: unless-stopped
        expose:
            - 9090
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #alertmanager Service
    alertmanager:
        container_name: es_service_alertmanager
        image: prom/alertmanager:latest
        volumes:
            - ./Docker/config/alertmanager:/etc/alertmanager
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        restart: unless-stopped
        expose:
            - 9093
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #grafana Service
    grafana:
        container_name: es_service_grafana
        image: grafana/grafana:6.7.2
        volumes:
            - ./Docker/config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ./Docker/config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        environment:
            - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
            - GF_USERS_ALLOW_SIGN_UP=false
        restart: unless-stopped
        expose:
            - 3000
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

networks:
    team-service-network:


