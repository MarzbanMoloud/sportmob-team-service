version: '3'
services:
    #PHP Service
    php:
        container_name: es_service_php
        build:
            context: Docker/config/php
        volumes:
            - ./api:/usr/share/nginx
        networks:
            es-service-network:

    #Nginx Service
    nginx:
        container_name: es_service_nginx
        image: nginx:latest
        ports:
            - ${NGINX_EXPOSE_PORT:-8091}:80
        volumes:
            - ./api:/usr/share/nginx
            - ./Docker/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            es-service-network:

        depends_on:
            - php

    #Redis Service
    redis:
        container_name: es_service_redis
        image: redis:latest
        networks:
            es-service-network:

    #DynamoDb locally Service
    dynamodb:
        container_name: es_service_dynamo
        image: amazon/dynamodb-local:latest
        ports:
            - ${DYNAMODB_EXPOSE_PORT:-8883}:8000
        command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]
        networks:
            es-service-network:

    #prometheus Service
    prometheus:
        container_name: es_service_prometheus
        image: prom/prometheus:latest
        volumes:
            - ./Docker/config/prometheus:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        restart: unless-stopped
        expose:
            - ${PROMETHEUS_EXPOSE_PORT:-9090}
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #alertmanager Service
    alertmanager:
        container_name: es_service_alertmanager
        image: prom/alertmanager:latest
        volumes:
            - ./Docker/config/alertmanager:/etc/alertmanager
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        restart: unless-stopped
        expose:
            - ${ALERT_MANAGER_EXPOSE_PORT:-9093}
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #nodeexporter Service
    nodeexporter:
        container_name: es_service_nodeexporter
        image: prom/node-exporter:v0.18.1
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        restart: unless-stopped
        expose:
            - ${NODE_EXPORTER_EXPOSE_PORT:-9100}
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #cadvisor Service
    cadvisor:
        container_name: es_service_cadvisor
        image: gcr.io/google-containers/cadvisor:v0.34.0
        privileged: true
        devices:
            - /dev/kmsg:/dev/kmsg
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /cgroup:/cgroup:ro
        restart: unless-stopped
        expose:
            - ${CADVISOR_EXPOSE_PORT:-8080}
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #grafana Service
    grafana:
        container_name: es_service_grafana
        image: grafana/grafana:6.7.2
        volumes:
            - ./Docker/config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ./Docker/config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
            - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_USERS_ALLOW_SIGN_UP:-false}
        restart: unless-stopped
        expose:
            - ${GRAFANA_EXPOSE_PORT:-3000}
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

    #caddy Service
    caddy:
        container_name: es_service_caddy
        image: caddy:latest
        ports:
            - ${GRAFANA_EXPOSE_PORT:-3000}:3000
            - ${PROMETHEUS_EXPOSE_PORT:-9090}:9090
            - ${ALERT_MANAGER_EXPOSE_PORT:-9093}:9093
        volumes:
            - ./Docker/config/caddy:/etc/caddy
        environment:
            - ADMIN_USER=${CADDY_ADMIN_USER:-admin}
            - ADMIN_PASSWORD=${CADDY_ADMIN_PASSWORD:-admin}
        restart: unless-stopped
        labels:
            org.label-schema.group: "monitoring"
        networks:
            es-service-network:

networks:
    es-service-network:


